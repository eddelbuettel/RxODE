on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install X11 dependencies on MacOS
        if: runner.os == 'macOS'
        run: brew install --cask xquartz
        shell: bash

      - name: Install cairo on MacOS
        if: runner.os == 'macOS'
        run: brew install cairo
        shell: bash

      - name: Link gfortran on MacOS
        if: runner.os == 'macOS'
        run: |
          sudo ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
          sudo mkdir /usr/local/gfortran
          sudo ln -s "$(brew --prefix gcc)/lib/gcc/10/lib" /usr/local/gfortran/lib
        shell: bash

      - name: Create Makevars for Fortran linking options on MacOs
        if: runner.os == 'macOS'
        run: |
          try(dir.create("~/.R"))
          writeLines(c("GCCBASE:=$(shell brew --prefix gcc)","FLIBS=-L$(GCCBASE)/lib/gcc/10/ -lm",""),"~/.R/Makevars")
        shell: Rscript {0}

      - name: Install packages from cran (source)
        run: |
          install.packages('remotes')
          install.packages("jsonlite", type="source")
          install.packages("usethis", type="source")
          install.packages("symengine", type="source")
	  remotes::install_github("nlmixrdevelopment/dparser-R")
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Test coverage
        run: |
           options(covr.flags = c(CFLAGS = "-O0 --coverage", CXXFLAGS = "-O0 --coverage", LDFLAGS = "--coverage"))
           pkgbuild::with_build_tools(covr::codecov(token="c1a47ffb-e5b5-420a-a0ed-6df480bcb833", quiet=FALSE))
        shell: Rscript {0}
